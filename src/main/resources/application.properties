debug=true
server.port=8000
spring.profiles.active=prd
## Server Common Config
server.servlet.context-path=/app
## TimeZone Configuration
spring.jackson.time-zone=GMT+8
## DataSource Common Config
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.max-idle=10
#spring.datasource.max-wait=10000
#spring.datasource.min-idle=5
#spring.datasource.initial-size=5
#spring.datasource.validation-query=SELECT 1
#spring.datasource.validation-interval=10000
#spring.datasource.time-between-eviction-runs-millis=10000
#spring.datasource.min-evictable-idle-time-millis=10000
#spring.datasource.remove-abandoned=true
#spring.datasource.remove-abandoned-timeout=60
#spring.datasource.test-on-borrow=true
#spring.datasource.test-while-idle=true
spring.datasource.url=jdbc:mysql://localhost:3306/hsmyapp?serverTimezone=UTC&characterEncoding=utf8&useUnicode=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池配置
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
#连接等待超时时间
spring.datasource.maxWait=60000
#配置隔多久进行一次检测(检测可以关闭的空闲连接)
spring.datasource.timeBetweenEvictionRunsMillis=60000
#配置连接在池中的最小生存时间
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

## JPA Common Configuration
#spring.jpa.open-in-view=true
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
## Web Token Configuration
# 不需要进行 web token 的 uri 列表使用  ',' 分隔，支持 Ant-style 路径模式 
web.token.ignore.uri.pattern=/app/image/**,/app/error/**,/app/swagger-resources/**,/app/hsmy/user/**,/app/hsmy/sms/*,/app/hsmy/batchUploadImage/**,/app/hsmy/infopub/**,/app/team/*/join,/app/team/*/user/*,/app/wechat/openid/*
## 消息提醒参数配置
# 小程序应用 id
wechat.app-id=wxf603bb80228b60bf
# wxf76c77771406a0c9
# 9d7cac1182d23c768442e34109a378e5
# 小程序应用秘钥
wechat.app-secret=fa937d7b5ae7e7ffbe3525cdc7e832f7
# 小程序消息通知模板 id 
wechat.notify.template-id=NWlDmDjPmc_E-czrsxZQH1qr-LqrYsR9jRl4mJ_luQo
wecaht.acquire-access-token-url=https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={appId}&secret={appSecret}
wecaht.send-messag-url=https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token={ACCESS_TOKEN}
wecaht.jscode2session-url=https://api.weixin.qq.com/sns/jscode2session?appid={appId}&secret={appSecret}&js_code={jsCode}&grant_type=authorization_code

#信息发布文件存放路径
wechat.infopub.filepath =  /usr/hsmy/pics
##/Users/mw/hsmy/hsmyapp-back/
#/usr/hsmy/pics
wechat.infopub.filesplitchar = ?|
#spring.http.multipart.max-file-size=1MB
#spring.http.multipart.max-request-size=1MB


## jwt expire



##jwt配置
audience.clientId = 098f6bcd4621d373cade4e832627b4f6
audience.base64Secret = MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY
audience.name = restapiuser
audience.expiresSecond = 172800



#
###jwt配置
#audience:
## 代表这个JWT的接收对象,存入audience
#clientId: 098f6bcd4621d373cade4e832627b4f6
## 密钥, 经过Base64加密, 可自行替换
#base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=
## JWT的签发主体，存入issuer
#name: restapiuser
## 过期时间，时间戳
#expiresSecond: 172800

### redis config
spring.redis.cache.nodes=192.168.159.129:7001,192.168.159.129:7002,192.168.159.129:7003,192.168.159.129:7004
spring.redis.cache.host=106.53.71.232:6379
spring.redis.cache.password=hsmy
spring.redis.cache.maxIdle=10
spring.redis.cache.minIdle=1
spring.redis.cache.maxTotal=5000
spring.redis.cache.maxWaitMillis=5000

